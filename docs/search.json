[
  {
    "objectID": "practice presentation_240716.html",
    "href": "practice presentation_240716.html",
    "title": "practice presentation",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "practice presentation_240716.html#quarto",
    "href": "practice presentation_240716.html#quarto",
    "title": "practice presentation",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "practice presentation_240716.html#running-code",
    "href": "practice presentation_240716.html#running-code",
    "title": "practice presentation",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n2"
  },
  {
    "objectID": "presentation 0.html",
    "href": "presentation 0.html",
    "title": "presentation 0",
    "section": "",
    "text": "필요한 패키지 불러오기\n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\n\n데이터 불러오기\n\nmarket = pd.read_excel(\"data/traditionalmarket.xlsx\")\nmarket2 = market.copy()\n\n\n\n변수명 재설정하기\n\nmarket2 = market2.rename(columns = {\"시장명\" : \"market_name\", \n                                    \"시장유형\" : \"type\",\n                                    \"소재지도로명주소\" : \"open_period\",\n                                    \"소재지지번주소\" : \"address_old\",\n                                    \"점포수\" : \"market_count\",\n                                    \"사용가능상품권\" : \"certificate\",\n                                    \"공중화장실 보유여부\" :\"public_toilet\",\n                                    \"주차장 보유여부\" : \"parking_lot\",\n                                    \"개설년도\" : \"year\",\n                                    \"데이터기준일자\" : \"data_date\"})\n\n\n\n데이터 변수별 요약통계량과 정보 확인하기\n\nmarket2['market_count'].describe()\nmarket2[\"public_toilet\"].info()\nmarket2[\"parking_lot\"].info()\n\n&lt;class 'pandas.core.series.Series'&gt;\nRangeIndex: 1439 entries, 0 to 1438\nSeries name: public_toilet\nNon-Null Count  Dtype \n--------------  ----- \n1439 non-null   object\ndtypes: object(1)\nmemory usage: 11.4+ KB\n&lt;class 'pandas.core.series.Series'&gt;\nRangeIndex: 1439 entries, 0 to 1438\nSeries name: parking_lot\nNon-Null Count  Dtype \n--------------  ----- \n1439 non-null   object\ndtypes: object(1)\nmemory usage: 11.4+ KB\n\n\n\n\nmarket_scale 파생변수 생성과 막대그래프 확인\n\nplt.clf()\nmarket2 = market2.assign(market_scale = np.where(market2[\"market_count\"] &gt;= 134, \"large\", \n                                        np.where(market2[\"market_count\"] &gt;= 50, \"medium\", \"small\")))\nsns.countplot(data = market2, x = 'market_scale', hue = 'market_scale')\nplt.show()\n\n\n\n\n\n\n\n\n\n\nconv_level 파생변수 생성과 막대그래프 확인\n\nplt.clf()\nmarket2['conv_level'] = np.where((market2['public_toilet'] == 'Y') & (market2['parking_lot'] == 'Y'), 'high', \n                   np.where((market2['public_toilet'] == 'N') & (market2['public_toilet'] == 'N') , 'low', 'intermediate'))\nsns.countplot(data = market2, x = 'conv_level', hue = 'conv_level')\nplt.show()\n\n\n\n\n\n\n\n\n\n\n시장유형 및 점포규모의 시장개수 알아보기\n\ndf = market2.groupby([\"type\", \"market_scale\"], as_index = False) \\\n            .agg(market_count = (\"market_scale\", \"count\"))\ndf.sort_values('market_count', ascending = False)\n\n\n\n\n\n\n\n\ntype\nmarket_scale\nmarket_count\n\n\n\n\n1\n상설\nmedium\n532\n\n\n0\n상설\nlarge\n281\n\n\n2\n상설\nsmall\n189\n\n\n4\n상설+정기\nmedium\n145\n\n\n8\n정기\nsmall\n117\n\n\n3\n상설+정기\nlarge\n66\n\n\n5\n상설+정기\nsmall\n48\n\n\n7\n정기\nmedium\n46\n\n\n6\n정기\nlarge\n15\n\n\n\n\n\n\n\n\n\n막대그래프로 알아보기\n\nplt.clf()\nsns.barplot(data = df, x = 'type', y = 'market_count', hue = 'market_scale')\nplt.show()\n\nC:\\Users\\USER\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning:\n\nGlyph 49345 (\\N{HANGUL SYLLABLE SANG}) missing from current font.\n\nC:\\Users\\USER\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning:\n\nGlyph 49444 (\\N{HANGUL SYLLABLE SEOL}) missing from current font.\n\nC:\\Users\\USER\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning:\n\nGlyph 51221 (\\N{HANGUL SYLLABLE JEONG}) missing from current font.\n\nC:\\Users\\USER\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning:\n\nGlyph 44592 (\\N{HANGUL SYLLABLE GI}) missing from current font."
  },
  {
    "objectID": "LTH_project/index.html",
    "href": "LTH_project/index.html",
    "title": "전통시장 점포 규모와 인구비율에 관한 분석",
    "section": "",
    "text": "분석 목적\n전통시장 홍보 목적 가설 : 만약 인구가 많아도 점포수가 적으면 홍보 필요성이 생긴다. 여행 루트에 전통시장을 추가?\n2024년 4월에 보도된 세계타임즈에서 KB국민카드의 전통시장 카드 소비 데이터 분석을 볼 수 있습니다. 전통시장의 연령별 매출 비중에서 40%는 60대 이상에서 발생되었습니다. 50대 26%, 40대 17%, 30대 10%, 20대 7%로 연령대가 높을수록 매출 비중이 높게 나타났습니다.\n시장은 인구가 많은 곳에 분포되어 있는데, 전통시장 또한 단순히 인구가 많은 곳이 점포수가 많은지? 주 고객층인 60대 이상이 많은 지역에 점포수가 많은지? 알고 싶었다.\n2015년 기준으로 60대 이상 비율이 높은 행정구역에 점포수가 많이 분포되어 있는지 분석하기. 이를 바탕으로 60대 비율이 적고, 인구가 많은 곳에 점포수가 많은지? 60대 이상 비율이 높고, 인구가 적은 구역에 점포수가 많은지 비교하기. 어느특징에 따라 전통시장이 많이 위치한지 분석해보았습니다.\n\n나이 나누기\n0~19세 = age_under_20\n20~59세 = age_2050\n60~100세 이상 = age_over_60\n한국은 공공기관 및 일부 기업이 60세로 정년으로 두고 있기 때문에 위와 같이 노년의 기준을 60세 이상으로 정했습니다.\n(미국과 유럽은 60~65세 사이를 정년으로 두고 있습니다.)\n\n\n\n점포수 크기에 따른 연령층 확인하기\n\nimport pandas as pd\nimport numpy as np\n\n\n2015년 12월 기준 인구조사 파일 불러오기\n\npop = pd.read_excel('data/pop_2015.xlsx')\n\n\n\n원본 숫자 안에 , 를 없애기 (문자열을 숫자열로 바꾸기)\n원본 데이터의 values를 보면 천 단위로 , 가 있다. 때문에 문자열로 인식되어서 이를 지우고 숫자열로 바꾼다.\n\nsubset = pop.iloc[1:18,1:14]\nfor col in subset.columns:\n    subset[col] = subset[col].str.replace(',', '').astype(int)\nsubset\n\n\n\n\n\n\n\n\n총 인구수\n연령구간인구수\n0~9세\n10~19세\n20~29세\n30~39세\n40~49세\n50~59세\n60~69세\n70~79세\n80~89세\n90~99세\n100세 이상\n\n\n\n\n1\n10022181\n10022181\n783299\n985790\n1447221\n1668253\n1701609\n1588333\n1037752\n582367\n192801\n29719\n5037\n\n\n2\n3513777\n3513777\n267227\n345503\n456514\n493958\n568218\n619703\n432899\n239641\n79128\n9497\n1489\n\n\n3\n2487829\n2487829\n208115\n289590\n326755\n342633\n438674\n419653\n253693\n148884\n53282\n6007\n543\n\n\n4\n2925815\n2925815\n271758\n324530\n402113\n455898\n516105\n494119\n255834\n142147\n54650\n7960\n701\n\n\n5\n1472199\n1472199\n143700\n197005\n198686\n221036\n258049\n217366\n127348\n76489\n28346\n3860\n314\n\n\n6\n1518775\n1518775\n145049\n184964\n210749\n228720\n267008\n238664\n134281\n76136\n29005\n3918\n281\n\n\n7\n1173534\n1173534\n116241\n139958\n158615\n180833\n211988\n201390\n100468\n45817\n16011\n2074\n139\n\n\n8\n210884\n210884\n29825\n23398\n23043\n40025\n37370\n25872\n15614\n10351\n4718\n634\n34\n\n\n9\n12522606\n12522606\n1251234\n1479739\n1644870\n1969170\n2302937\n1962003\n1027712\n616198\n232931\n32804\n3008\n\n\n10\n1549507\n1549507\n123275\n171073\n184802\n189754\n250407\n269286\n171452\n131730\n49542\n7578\n608\n\n\n11\n1583952\n1583952\n142319\n179628\n196456\n216258\n262133\n260270\n158194\n114586\n47691\n5977\n440\n\n\n12\n2077649\n2077649\n197236\n229214\n244233\n296909\n333108\n318857\n212781\n160439\n74759\n9433\n680\n\n\n13\n1869711\n1869711\n159824\n217813\n218698\n232517\n299535\n295583\n210933\n155007\n70437\n8725\n639\n\n\n14\n1908996\n1908996\n158142\n209957\n206551\n224820\n291730\n308904\n224235\n190822\n82190\n10892\n753\n\n\n15\n2702826\n2702826\n223394\n277327\n311383\n347557\n428513\n456781\n314821\n229763\n99895\n12658\n734\n\n\n16\n3364702\n3364702\n317867\n384287\n394794\n476814\n580967\n551878\n337382\n216802\n92498\n10817\n596\n\n\n17\n624395\n624395\n63183\n77313\n73565\n85811\n110642\n96129\n57880\n39258\n17326\n3075\n213\n\n\n\n\n\n\n\n\npop.iloc[1:18,1:14] = subset\npop = pop.iloc[0:18,0:14]\npop\n\n\n\n\n\n\n\n\n행정기관\n총 인구수\n연령구간인구수\n0~9세\n10~19세\n20~29세\n30~39세\n40~49세\n50~59세\n60~69세\n70~79세\n80~89세\n90~99세\n100세 이상\n\n\n\n\n0\n전국\n51,529,338\n51,529,338\n4,601,688\n5,717,089\n6,699,048\n7,670,966\n8,858,993\n8,324,791\n5,073,279\n3,176,437\n1,225,210\n165,628\n16,209\n\n\n1\n서울특별시\n10022181\n10022181\n783299\n985790\n1447221\n1668253\n1701609\n1588333\n1037752\n582367\n192801\n29719\n5037\n\n\n2\n부산광역시\n3513777\n3513777\n267227\n345503\n456514\n493958\n568218\n619703\n432899\n239641\n79128\n9497\n1489\n\n\n3\n대구광역시\n2487829\n2487829\n208115\n289590\n326755\n342633\n438674\n419653\n253693\n148884\n53282\n6007\n543\n\n\n4\n인천광역시\n2925815\n2925815\n271758\n324530\n402113\n455898\n516105\n494119\n255834\n142147\n54650\n7960\n701\n\n\n5\n광주광역시\n1472199\n1472199\n143700\n197005\n198686\n221036\n258049\n217366\n127348\n76489\n28346\n3860\n314\n\n\n6\n대전광역시\n1518775\n1518775\n145049\n184964\n210749\n228720\n267008\n238664\n134281\n76136\n29005\n3918\n281\n\n\n7\n울산광역시\n1173534\n1173534\n116241\n139958\n158615\n180833\n211988\n201390\n100468\n45817\n16011\n2074\n139\n\n\n8\n세종특별자치시\n210884\n210884\n29825\n23398\n23043\n40025\n37370\n25872\n15614\n10351\n4718\n634\n34\n\n\n9\n경기도\n12522606\n12522606\n1251234\n1479739\n1644870\n1969170\n2302937\n1962003\n1027712\n616198\n232931\n32804\n3008\n\n\n10\n강원도\n1549507\n1549507\n123275\n171073\n184802\n189754\n250407\n269286\n171452\n131730\n49542\n7578\n608\n\n\n11\n충청북도\n1583952\n1583952\n142319\n179628\n196456\n216258\n262133\n260270\n158194\n114586\n47691\n5977\n440\n\n\n12\n충청남도\n2077649\n2077649\n197236\n229214\n244233\n296909\n333108\n318857\n212781\n160439\n74759\n9433\n680\n\n\n13\n전라북도\n1869711\n1869711\n159824\n217813\n218698\n232517\n299535\n295583\n210933\n155007\n70437\n8725\n639\n\n\n14\n전라남도\n1908996\n1908996\n158142\n209957\n206551\n224820\n291730\n308904\n224235\n190822\n82190\n10892\n753\n\n\n15\n경상북도\n2702826\n2702826\n223394\n277327\n311383\n347557\n428513\n456781\n314821\n229763\n99895\n12658\n734\n\n\n16\n경상남도\n3364702\n3364702\n317867\n384287\n394794\n476814\n580967\n551878\n337382\n216802\n92498\n10817\n596\n\n\n17\n제주특별자치도\n624395\n624395\n63183\n77313\n73565\n85811\n110642\n96129\n57880\n39258\n17326\n3075\n213\n\n\n\n\n\n\n\n\n\n전국을 제외한 총 인구 그래프화\n\ndata_pop = pop.drop(0).groupby('행정기관') \\\n                      .agg(count = ('총 인구수','min'))\ndata_pop = data_pop.sort_values('count',ascending = False)\ndata_pop\n\n\n\n\n\n\n\n\ncount\n\n\n행정기관\n\n\n\n\n\n경기도\n12522606\n\n\n서울특별시\n10022181\n\n\n부산광역시\n3513777\n\n\n경상남도\n3364702\n\n\n인천광역시\n2925815\n\n\n경상북도\n2702826\n\n\n대구광역시\n2487829\n\n\n충청남도\n2077649\n\n\n전라남도\n1908996\n\n\n전라북도\n1869711\n\n\n충청북도\n1583952\n\n\n강원도\n1549507\n\n\n대전광역시\n1518775\n\n\n광주광역시\n1472199\n\n\n울산광역시\n1173534\n\n\n제주특별자치도\n624395\n\n\n세종특별자치시\n210884\n\n\n\n\n\n\n\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nplt.rcParams.update({'font.family' : 'Malgun Gothic'})\n\nplt.clf()\nsns.barplot(data = data_pop, y = '행정기관', x = 'count', hue = '행정기관')\nplt.show()\n\n\n\n\n\n\n\n\n경기도와 서울은 수도권 특성상 면적대비 많은 인구가 몰려있다. 그렇기에 전통시장의 갯수도 많을 수 밖에 없는 조건이므로 나중 분석에서 제외할 예정이다.\n\n\n각 지역마다 연령층 비율 계산하기\n\npop_서울, pop_부산, pop_대구, pop_인천, pop_광주, pop_대전, pop_울산, pop_세종, \\\npop_경기, pop_강원, pop_충북, pop_충남, pop_전북, pop_전남, pop_경북, pop_경남, pop_제주 = [\n    pop['총 인구수'][i] for i in range(1, 18)]\n\n서울_유소년_비율 = (pop.iloc[1,3:5].sum()) / pop_서울* 100\n부산_유소년_비율 = (pop.iloc[2,3:5].sum()) / pop_부산* 100\n대구_유소년_비율 = (pop.iloc[3,3:5].sum()) / pop_대구* 100\n인천_유소년_비율 = (pop.iloc[4,3:5].sum()) / pop_인천* 100\n광주_유소년_비율 = (pop.iloc[5,3:5].sum()) / pop_광주* 100\n대전_유소년_비율 = (pop.iloc[6,3:5].sum()) / pop_대전* 100\n울산_유소년_비율 = (pop.iloc[7,3:5].sum()) / pop_울산* 100\n세종_유소년_비율 = (pop.iloc[8,3:5].sum()) / pop_세종* 100\n경기_유소년_비율 = (pop.iloc[9,3:5].sum()) / pop_경기* 100\n강원_유소년_비율 = (pop.iloc[10,3:5].sum()) / pop_강원* 100\n충북_유소년_비율 = (pop.iloc[11,3:5].sum()) / pop_충북* 100\n충남_유소년_비율 = (pop.iloc[12,3:5].sum()) / pop_충남* 100\n전북_유소년_비율 = (pop.iloc[13,3:5].sum()) / pop_전북* 100\n전남_유소년_비율 = (pop.iloc[14,3:5].sum()) / pop_전남* 100\n경북_유소년_비율 = (pop.iloc[15,3:5].sum()) / pop_경북* 100\n경남_유소년_비율 = (pop.iloc[16,3:5].sum()) / pop_경남* 100\n제주_유소년_비율 = (pop.iloc[17,3:5].sum()) / pop_제주* 100\n\n\n서울_성인_비율 = (pop.iloc[1,5:9].sum()) / pop_서울 * 100\n부산_성인_비율 = (pop.iloc[2,5:9].sum()) / pop_부산* 100\n대구_성인_비율 = (pop.iloc[3,5:9].sum()) / pop_대구* 100\n인천_성인_비율 = (pop.iloc[4,5:9].sum()) / pop_인천* 100\n광주_성인_비율 = (pop.iloc[5,5:9].sum()) / pop_광주* 100\n대전_성인_비율 = (pop.iloc[6,5:9].sum()) / pop_대전* 100\n울산_성인_비율 = (pop.iloc[7,5:9].sum()) / pop_울산* 100\n세종_성인_비율 = (pop.iloc[8,5:9].sum()) / pop_세종* 100\n경기_성인_비율 = (pop.iloc[9,5:9].sum()) / pop_경기* 100\n강원_성인_비율 = (pop.iloc[10,5:9].sum()) / pop_강원* 100\n충북_성인_비율 = (pop.iloc[11,5:9].sum()) / pop_충북* 100\n충남_성인_비율 = (pop.iloc[12,5:9].sum()) / pop_충남* 100\n전북_성인_비율 = (pop.iloc[13,5:9].sum()) / pop_전북* 100\n전남_성인_비율 = (pop.iloc[14,5:9].sum()) / pop_전남* 100\n경북_성인_비율 = (pop.iloc[15,5:9].sum()) / pop_경북* 100\n경남_성인_비율 = (pop.iloc[16,5:9].sum()) / pop_경남* 100\n제주_성인_비율 = (pop.iloc[17,5:9].sum()) / pop_제주* 100\n\n\n서울_노인_비율 = (pop.iloc[1,9:14].sum()) / pop_서울 * 100\n부산_노인_비율 = (pop.iloc[2,9:14].sum()) / pop_부산* 100\n대구_노인_비율 = (pop.iloc[3,9:14].sum()) / pop_대구* 100\n인천_노인_비율 = (pop.iloc[4,9:14].sum()) / pop_인천* 100\n광주_노인_비율 = (pop.iloc[5,9:14].sum()) / pop_광주* 100\n대전_노인_비율 = (pop.iloc[6,9:14].sum()) / pop_대전* 100\n울산_노인_비율 = (pop.iloc[7,9:14].sum()) / pop_울산* 100\n세종_노인_비율 = (pop.iloc[8,9:14].sum()) / pop_세종* 100\n경기_노인_비율 = (pop.iloc[9,9:14].sum()) / pop_경기* 100\n강원_노인_비율 = (pop.iloc[10,9:14].sum()) / pop_강원* 100\n충북_노인_비율 = (pop.iloc[11,9:14].sum()) / pop_충북* 100\n충남_노인_비율 = (pop.iloc[12,9:14].sum()) / pop_충남* 100\n전북_노인_비율 = (pop.iloc[13,9:14].sum()) / pop_전북* 100\n전남_노인_비율 = (pop.iloc[14,9:14].sum()) / pop_전남* 100\n경북_노인_비율 = (pop.iloc[15,9:14].sum()) / pop_경북* 100\n경남_노인_비율 = (pop.iloc[16,9:14].sum()) / pop_경남* 100\n제주_노인_비율 = (pop.iloc[17,9:14].sum()) / pop_제주* 100\n\n\n\n인구 비율 DataFrame 만들기\n\npop_ratio = pd.DataFrame({\n  '서울'      : [서울_유소년_비율, 서울_성인_비율, 서울_노인_비율],\n  '부산'      : [부산_유소년_비율, 부산_성인_비율, 부산_노인_비율],\n  '대구'      : [대구_유소년_비율, 대구_성인_비율, 대구_노인_비율],\n  '인천'    : [인천_유소년_비율, 인천_성인_비율, 인천_노인_비율],\n  '광주'    : [광주_유소년_비율, 광주_성인_비율, 광주_노인_비율],\n  '대전'     : [대전_유소년_비율, 대전_성인_비율, 대전_노인_비율],\n  '울산'      : [울산_유소년_비율, 울산_성인_비율, 울산_노인_비율],\n  '세종'     : [세종_유소년_비율, 세종_성인_비율, 세종_노인_비율],\n  '경기도'   : [경기_유소년_비율, 경기_성인_비율, 경기_노인_비율],\n  '강원'    : [강원_유소년_비율, 강원_성인_비율, 강원_노인_비율],\n  '충청북도'  : [충북_유소년_비율, 충북_성인_비율, 충북_노인_비율],\n  '충청남도'  : [충남_유소년_비율, 충남_성인_비율, 충남_노인_비율],\n  '전라북도'    : [전북_유소년_비율, 전북_성인_비율, 전북_노인_비율],\n  '전라남도'    : [전남_유소년_비율, 전남_성인_비율, 전남_노인_비율],\n  '경상북도' : [경북_유소년_비율, 경북_성인_비율, 경북_노인_비율],\n  '경상남도' : [경남_유소년_비율, 경남_성인_비율, 경남_노인_비율],\n  '제주도'       : [제주_유소년_비율, 제주_성인_비율, 제주_노인_비율]\n  })\n\npop_ratio.index = ['age_under_20','age_2050','age_over_60']\npop_ratio = pop_ratio.transpose()\n\n\n# 지역 칼럼 추가하기\npop_ratio['region'] = ['서울특별시', '부산광역시', '대구광역시', '인천광역시', '광주광역시', '대전광역시', '울산광역시', '세종특별시', '경기도', '강원도', '충청북도', '충청남도', '전라북도', '전라남도', '경상북도', '경상남도', '제주도']\n\npop_ratio\npop_ratio.sort_values('age_over_60', ascending = False)\n\n\n\n\n\n\n\n\nage_under_20\nage_2050\nage_over_60\nregion\n\n\n\n\n전라남도\n19.282335\n54.060092\n26.657573\n전라남도\n\n\n경상북도\n18.525832\n57.134052\n24.340117\n경상북도\n\n\n전라북도\n20.197613\n55.962285\n23.840101\n전라북도\n\n\n강원\n18.996236\n57.711840\n23.291924\n강원도\n\n\n충청남도\n20.525604\n57.425821\n22.048575\n충청남도\n\n\n부산\n17.437931\n60.857391\n21.704678\n부산광역시\n\n\n충청북도\n20.325553\n59.036953\n20.637494\n충청북도\n\n\n경상남도\n20.868237\n59.572973\n19.558790\n경상남도\n\n\n제주도\n22.501141\n58.640284\n18.858575\n제주도\n\n\n대구\n20.005595\n61.407557\n18.586848\n대구광역시\n\n\n서울\n17.651737\n63.912396\n18.435867\n서울특별시\n\n\n광주\n23.142591\n60.802718\n16.054691\n광주광역시\n\n\n대전\n21.728893\n62.230482\n16.040625\n대전광역시\n\n\n인천\n20.380236\n63.853490\n15.766274\n인천광역시\n\n\n경기도\n21.808344\n62.918054\n15.273602\n경기도\n\n\n세종\n25.238046\n59.895488\n14.866467\n세종특별시\n\n\n울산\n21.831408\n64.150336\n14.018256\n울산광역시\n\n\n\n\n\n\n\n\n\n\n전통시장 데이터 불러오기\n\n# 데이터 불러오기\nmarket = pd.read_excel(\"data/traditionalmarket.xlsx\")\n\n# 분석을 위한 복사본 만들기\nmarket2 = market.copy()\n\n\n# 엑셀의 변수 한글을 영어로 rename\nmarket2 = market2.rename(columns = {\"시장명\"              : \"market_name\", \n                                    \"시장유형\"            : \"type\",\n                                    \"소재지도로명주소\"    : \"adress_road\",\n                                    \"시장개설주기\"        : \"open_period\",\n                                    \"소재지지번주소\"      : \"address_old\",\n                                    \"점포수\"              : \"market_count\",\n                                    \"사용가능상품권\"      : \"certificate\",\n                                    \"공중화장실 보유여부\" :\"public_toilet\",\n                                    \"주차장 보유여부\"     : \"parking_lot\",\n                                    \"개설년도\"            : \"year\",\n                                    \"데이터기준일자\"      : \"data_date\"})\n\n\n# 데이터의 정보 확인하기\nmarket2.describe()\nmarket2[\"public_toilet\"].info()\nmarket2[\"parking_lot\"].info()\nmarket2['market_count'].describe()\n\n&lt;class 'pandas.core.series.Series'&gt;\nRangeIndex: 1439 entries, 0 to 1438\nSeries name: public_toilet\nNon-Null Count  Dtype \n--------------  ----- \n1439 non-null   object\ndtypes: object(1)\nmemory usage: 11.4+ KB\n&lt;class 'pandas.core.series.Series'&gt;\nRangeIndex: 1439 entries, 0 to 1438\nSeries name: parking_lot\nNon-Null Count  Dtype \n--------------  ----- \n1439 non-null   object\ndtypes: object(1)\nmemory usage: 11.4+ KB\n\n\ncount    1439.000000\nmean      143.907575\nstd       298.989963\nmin         0.000000\n25%        50.000000\n50%        80.000000\n75%       134.000000\nmax      5852.000000\nName: market_count, dtype: float64\n\n\n\n# 점포수에 따른 규모 크기를 설명해주는 변수 만들기\nmarket2 = market2.assign(market_scale = np.where(market2[\"market_count\"] &gt;= 134, \"large\", \n                                        np.where(market2[\"market_count\"] &gt;= 50, \"medium\", \"small\")))\n\n# 편의시설의 유무에 따른 레벨링 하기\nmarket2['level'] = np.where((market2['public_toilet'] == 'Y') & (market2['parking_lot'] == 'Y'), 'high', \n                   np.where((market2['public_toilet'] == 'N') & (market2['public_toilet'] == 'N') , 'low', 'intermediate'))\n\n\n# 확인 절차\nmarket2.head()\n\n\n\n\n\n\n\n\nmarket_name\ntype\nadress_road\nopen_period\naddress_old\nmarket_count\ncertificate\npublic_toilet\nparking_lot\nyear\ndata_date\nmarket_scale\nlevel\n\n\n\n\n0\n중앙시장\n상설\n강원도 강릉시 금성로 21\n상설\n강원 강릉시 성남동 50번지\n229\n온누리상품권\nY\nY\n1980.0\n2015-12-31\nlarge\nhigh\n\n\n1\n강릉동부시장\n상설\n강원도 강릉시 옥천로 48\n상설\n강원 강릉시 옥천동 223번지\n91\nNaN\nY\nN\n2014.0\n2015-12-31\nmedium\nintermediate\n\n\n2\n강릉서부시장\n상설\n강원도 강릉시 임영로 155번길 6\n상설\n강원 강릉시 용강동 29번지\n109\n온누리상품권\nY\nY\n1977.0\n2015-12-31\nmedium\nhigh\n\n\n3\n주문진종합시장\n상설+정기\n강원도 강릉시 주문진읍 구 시장길\n5일\n강원 강릉시 주문진읍 주문리 321-52번지\n77\n온누리상품권\nY\nY\n2006.0\n2015-12-31\nmedium\nhigh\n\n\n4\n주문진수산시장\n상설\n강원도 강릉시 주문진읍 시장1길 4-1\n상설\n강원 강릉시 주문진읍 주문리 312-91번지\n42\n온누리상품권\nY\nY\n2007.0\n2015-12-31\nsmall\nhigh\n\n\n\n\n\n\n\n\n# 그래프 그리기\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# x축을 편의 시설 레벨\nplt.clf()\nsns.countplot(data = market2, x = 'level', hue = 'level')\nplt.show()\n\n\n\n\n\n\n\n\n\n# 그래프 그리기 위한 df 생성\n# 시장 유형와 규모 크기에 따른 그룹화 / 규모 크기 갯수 추가\ndf = market2.groupby([\"type\", \"market_scale\"], as_index = False) \\\n            .agg(market_count = (\"market_scale\", \"count\"))\n\n# 규모 크기에 따른 내림차순\ndf.sort_values('market_count', ascending = False)\n\n# 만든 df를 x축에 시장 유형, y축은 규모 크기에 따른 점포 갯수\nplt.clf()\nsns.barplot(data = df, y = 'type', x = 'market_count', hue = 'market_scale')\nplt.show()\n\n\n\n\n\n\n\n\n\nplt.clf()\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\n\n인구 데이터와 시장 데이터 합치기\n\nmarket2['region'] = market2['adress_road'].str.split().str[0]\n\nmarket_pop = pd.merge(market2, pop_ratio, how = 'left', on = 'region')\nmarket_pop\n\n\n\n\n\n\n\n\nmarket_name\ntype\nadress_road\nopen_period\naddress_old\nmarket_count\ncertificate\npublic_toilet\nparking_lot\nyear\ndata_date\nmarket_scale\nlevel\nregion\nage_under_20\nage_2050\nage_over_60\n\n\n\n\n0\n중앙시장\n상설\n강원도 강릉시 금성로 21\n상설\n강원 강릉시 성남동 50번지\n229\n온누리상품권\nY\nY\n1980.0\n2015-12-31\nlarge\nhigh\n강원도\n18.996236\n57.711840\n23.291924\n\n\n1\n강릉동부시장\n상설\n강원도 강릉시 옥천로 48\n상설\n강원 강릉시 옥천동 223번지\n91\nNaN\nY\nN\n2014.0\n2015-12-31\nmedium\nintermediate\n강원도\n18.996236\n57.711840\n23.291924\n\n\n2\n강릉서부시장\n상설\n강원도 강릉시 임영로 155번길 6\n상설\n강원 강릉시 용강동 29번지\n109\n온누리상품권\nY\nY\n1977.0\n2015-12-31\nmedium\nhigh\n강원도\n18.996236\n57.711840\n23.291924\n\n\n3\n주문진종합시장\n상설+정기\n강원도 강릉시 주문진읍 구 시장길\n5일\n강원 강릉시 주문진읍 주문리 321-52번지\n77\n온누리상품권\nY\nY\n2006.0\n2015-12-31\nmedium\nhigh\n강원도\n18.996236\n57.711840\n23.291924\n\n\n4\n주문진수산시장\n상설\n강원도 강릉시 주문진읍 시장1길 4-1\n상설\n강원 강릉시 주문진읍 주문리 312-91번지\n42\n온누리상품권\nY\nY\n2007.0\n2015-12-31\nsmall\nhigh\n강원도\n18.996236\n57.711840\n23.291924\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n1434\n엄정내창시장\n상설+정기\n충청북도 충주시 엄정면 내창로 191-1\n5일\n충북 충주시 엄정면 미내리 159-15\n98\n온누리상품권\nN\nN\n2013.0\n2015-12-31\nmedium\nlow\n충청북도\n20.325553\n59.036953\n20.637494\n\n\n1435\n중앙공설시장\n상설\n충청북도 충주시 예성로 168\n상설\n충북 충주시 성서동 306\n65\n온누리상품권\nY\nY\n2005.0\n2015-12-31\nmedium\nhigh\n충청북도\n20.325553\n59.036953\n20.637494\n\n\n1436\n남부시장\n상설\n충청북도 충주시 지곡10길 38-1\n상설\n충북 충주시 지현동 1431\n61\n온누리상품권\nY\nY\n2005.0\n2015-12-31\nmedium\nhigh\n충청북도\n20.325553\n59.036953\n20.637494\n\n\n1437\n충주자유시장\n상설+정기\n충청북도 충주시 충인6길 16\n5일\n충북 충주시 충인동 325\n274\n온누리상품권\nY\nY\n2005.0\n2015-12-31\nlarge\nhigh\n충청북도\n20.325553\n59.036953\n20.637494\n\n\n1438\n목행시장\n상설+정기\n충청북도 충주시 행정9길 35\n5일\n충북 충주시 목행동 676-44\n92\n온누리상품권\nY\nY\n2013.0\n2015-12-31\nmedium\nhigh\n충청북도\n20.325553\n59.036953\n20.637494\n\n\n\n\n1439 rows × 17 columns\n\n\n\n\n\n60대 이상 비율의 계급 나누기\n\nmarket_pop['age_over_60'].describe()\n\ncount    1439.000000\nmean       20.253145\nstd         3.405308\nmin        14.018256\n25%        18.435867\n50%        19.558790\n75%        23.291924\nmax        26.657573\nName: age_over_60, dtype: float64\n\n\n중앙값 19.55% 보다 높은 지역을 60대 이상 비율이 많다고 정의\n\n\n시장 종류 갯수\n\n# 노인인구 평균 비교\nmarket_pop['under'] = np.where(market_pop['age_over_60'] &lt; 19.55,1,0)\nmarket_pop['over'] = np.where(market_pop['age_over_60'] &gt;= 19.55,1,0)\nmarket_pop.groupby(['region']) \\\n          .agg(노인인구평균이상 = ('over','sum'), 노인인구평균이하 = ('under','sum'))\n\n\n\n\n\n\n\n\n노인인구평균이상\n노인인구평균이하\n\n\nregion\n\n\n\n\n\n\n강원도\n58\n0\n\n\n경기도\n0\n130\n\n\n경상남도\n155\n0\n\n\n경상북도\n149\n0\n\n\n광주광역시\n0\n26\n\n\n대구광역시\n0\n109\n\n\n대전광역시\n0\n27\n\n\n부산광역시\n169\n0\n\n\n서울특별시\n0\n216\n\n\n세종특별시\n0\n4\n\n\n울산광역시\n0\n40\n\n\n인천광역시\n0\n46\n\n\n전라남도\n108\n0\n\n\n전라북도\n60\n0\n\n\n제주도\n0\n25\n\n\n충청남도\n58\n0\n\n\n충청북도\n59\n0\n\n\n\n\n\n\n\n시장 종류가 몇 개인지 알아보기 위해 지역기준으로 1행에서 노인인구 비율이 높으면 1, 2행에서도 노인인구 비율이 낮으면 1의 값을 주어 모두 더하는 방식으로 계산했다.\n\nmarket_pop['over'] = np.where(market_pop['age_over_60'] &gt;= 19.55,1,1)\nmarket_pop.groupby(['region']) \\\n          .agg(시장종류갯수 = ('over','sum')) \\\n          .sort_values('시장종류갯수', ascending = False)\n\n\n\n\n\n\n\n\n시장종류갯수\n\n\nregion\n\n\n\n\n\n서울특별시\n216\n\n\n부산광역시\n169\n\n\n경상남도\n155\n\n\n경상북도\n149\n\n\n경기도\n130\n\n\n대구광역시\n109\n\n\n전라남도\n108\n\n\n전라북도\n60\n\n\n충청북도\n59\n\n\n충청남도\n58\n\n\n강원도\n58\n\n\n인천광역시\n46\n\n\n울산광역시\n40\n\n\n대전광역시\n27\n\n\n광주광역시\n26\n\n\n제주도\n25\n\n\n세종특별시\n4\n\n\n\n\n\n\n\n\n시장종류갯수 = market_pop.groupby(['region']) \\\n                         .agg(시장종류갯수 = ('over','sum')) \\\n                         .sort_values('시장종류갯수',ascending = False)\n\nplt.clf()\nsns.barplot(data = 시장종류갯수, y = 'region', x = '시장종류갯수', hue = '시장종류갯수')\nplt.show()\n\n\n\n\n\n\n\n\n각 지역의 점포수를 sum 해보기\n\n#중앙값보다 높고 낮음을 yes | no로 표시하기\nmarket_pop['over'] = np.where(market_pop['age_over_60'] &gt;= 19.55,'Y','N')\n\nover_점포수 = market_pop.groupby(['region','over']) \\\n                        .agg(count = ('market_count','sum')) \\\n                        .sort_values('count', ascending = False)\nover_점포수\n\n\n\n\n\n\n\n\n\ncount\n\n\nregion\nover\n\n\n\n\n\n서울특별시\nN\n50146\n\n\n부산광역시\nY\n29094\n\n\n경기도\nN\n18977\n\n\n경상남도\nY\n18156\n\n\n경상북도\nY\n16582\n\n\n대구광역시\nN\n14290\n\n\n인천광역시\nN\n10555\n\n\n충청남도\nY\n7657\n\n\n전라남도\nY\n7248\n\n\n충청북도\nY\n7156\n\n\n강원도\nY\n6811\n\n\n전라북도\nY\n5139\n\n\n제주도\nN\n4181\n\n\n울산광역시\nN\n3722\n\n\n대전광역시\nN\n3413\n\n\n광주광역시\nN\n3411\n\n\n세종특별시\nN\n545\n\n\n\n\n\n\n\n\n#서울과 경기도의 인구 비율 고려하기\n(pop_서울 + pop_경기) / 51529338 * 100\n\n43.75136160297654\n\n\n2015년 서울과 경기도의 인구 비율은 43.75% 로 가장 많은 인구가 있다. 인구가 많으면 자연스레 시장의 수도 많은 것은 부정할 수 없는 사실이다.\n그래서 이 두 지역을 제외한 나머지 결과를 보았습니다.\n\n# 서울과 경기도를 제외한 인구 그래프\n\nplt.clf()\nsns.barplot(data = data_pop[2:], y = '행정기관', x = 'count', hue = '행정기관')\nplt.show()\n\n\n\n\n\n\n\n\n\n# 인구 많은 지역 제외\nover_점포수_new = over_점포수.drop('서울특별시').drop('경기도')\nover_점포수_new\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_9604\\2426921295.py:2: PerformanceWarning:\n\ndropping on a non-lexsorted multi-index without a level parameter may impact performance.\n\n\n\n\n\n\n\n\n\n\n\ncount\n\n\nregion\nover\n\n\n\n\n\n부산광역시\nY\n29094\n\n\n경상남도\nY\n18156\n\n\n경상북도\nY\n16582\n\n\n대구광역시\nN\n14290\n\n\n인천광역시\nN\n10555\n\n\n충청남도\nY\n7657\n\n\n전라남도\nY\n7248\n\n\n충청북도\nY\n7156\n\n\n강원도\nY\n6811\n\n\n전라북도\nY\n5139\n\n\n제주도\nN\n4181\n\n\n울산광역시\nN\n3722\n\n\n대전광역시\nN\n3413\n\n\n광주광역시\nN\n3411\n\n\n세종특별시\nN\n545\n\n\n\n\n\n\n\n\nplt.clf()\nsns.barplot(data = over_점포수_new, y = 'region', x = 'count', hue = 'over', palette='Set1')\nplt.show()\n\n\n\n\n\n\n\n\n상위 5개 중 노인비율이 높은 3곳이 점포수가 많았으며, 노인비율이 낮은 대구, 인천이 4,5위를 하였습니다.\n충청도,전라도,강원도와 같은 노인비율이 높은 곳이 다음 순위를 기록하였습니다. 제주도, 3개의 광역시, 세종특별시가 하위권을 기록하였습니다.\n\nplt.clf()\nsns.barplot(data = data_pop[2:], y = '행정기관', x = 'count', hue = '행정기관')\nplt.show()\n\nplt.clf()\nsns.barplot(data = over_점포수_new, y = 'region', x = 'count', hue = 'over', palette='Set1')\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n지역 인구수 3위 : 인천광역시가 점포수에서는 5위\n지역 인구수 5위 : 대구광역시가 점포수에서는 4위\n를 기록하였습니다.\n인천은 인구가 많지만 노인인구비율이 적어 점포수에서 하락(???)했습니다. 반대로 대구는 인천보다 인구수가 적지만 경상도의 중심에 있다는 정보를 고려하면 노인인구 비율이 높은 영향을 받아 점포수에서 순위 상승이 있는 것로 판단(????)\n인구가 많으면서 노인비율이 높은 부산광역시에서 점포수가 가장 많았습니다. 그리고 인천과 대구 2개의 광역시가 4,5위를 기록했지만 노인인구비율이 높은 도 단위 행정구역이 모두 상단에 위치한다는 점을 알 수 있었습니다.\n기본적으로 점포수는 인구수의 영향을 받아 순위가 메겨지는 점은 당연한 사실입니다. 하지만 노인인구비율도 높은 곳이 동시에 점포수가 많다는 점을 알 수 있습니다.\n\n\n점포갯수 / 노인인구\n\n# 지역별 노인 인구\n서울_노인 = (pop.iloc[1,9:14].sum())\n부산_노인 = (pop.iloc[2,9:14].sum())\n대구_노인 = (pop.iloc[3,9:14].sum())\n인천_노인 = (pop.iloc[4,9:14].sum())\n광주_노인 = (pop.iloc[5,9:14].sum())\n대전_노인 = (pop.iloc[6,9:14].sum())\n울산_노인 = (pop.iloc[7,9:14].sum())\n세종_노인 = (pop.iloc[8,9:14].sum())\n경기_노인 = (pop.iloc[9,9:14].sum())\n강원_노인 = (pop.iloc[10,9:14].sum())\n충북_노인 = (pop.iloc[11,9:14].sum())\n충남_노인 = (pop.iloc[12,9:14].sum())\n전북_노인 = (pop.iloc[13,9:14].sum())\n전남_노인 = (pop.iloc[14,9:14].sum())\n경북_노인 = (pop.iloc[15,9:14].sum())\n경남_노인 = (pop.iloc[16,9:14].sum())\n제주_노인 = (pop.iloc[17,9:14].sum())\n\n지역별노인 = pd.DataFrame({\n    'region' : ['서울특별시', '부산광역시', '대구광역시', '인천광역시', '광주광역시',\n    '대전광역시', '울산광역시', '세종특별시', '경기도', '강원도', '충청북도',\n    '충청남도','전라북도','전라남도', '경상북도', '경상남도', '제주도'],\n    '노인인구수' : [서울_노인,부산_노인,대구_노인,인천_노인,광주_노인,대전_노인,울산_노인,\n                   세종_노인,경기_노인,강원_노인,충북_노인,충남_노인,전북_노인,전남_노인,\n                   경북_노인,경남_노인,제주_노인]\n                   })\n지역별노인 = 지역별노인.sort_values('노인인구수', ascending = False)\n지역별노인\n\n\n\n\n\n\n\n\nregion\n노인인구수\n\n\n\n\n8\n경기도\n1912653\n\n\n0\n서울특별시\n1847676\n\n\n1\n부산광역시\n762654\n\n\n15\n경상남도\n658095\n\n\n14\n경상북도\n657871\n\n\n13\n전라남도\n508892\n\n\n2\n대구광역시\n462409\n\n\n3\n인천광역시\n461292\n\n\n11\n충청남도\n458092\n\n\n12\n전라북도\n445741\n\n\n9\n강원도\n360910\n\n\n10\n충청북도\n326888\n\n\n5\n대전광역시\n243621\n\n\n4\n광주광역시\n236357\n\n\n6\n울산광역시\n164509\n\n\n16\n제주도\n117752\n\n\n7\n세종특별시\n31351\n\n\n\n\n\n\n\n\n# 시장데이터와 지역별노인 데이터 합치기\nmarket_pop_old = pd.merge(market_pop, 지역별노인, how = 'left', on = 'region')\n\n\nratio_old = market_pop_old.groupby(['region','노인인구수'], as_index = False) \\\n                          .agg(count = ('market_count','sum')) \\\n                          .sort_values('count', ascending = False)\nratio_old\n\n\n\n\n\n\n\n\nregion\n노인인구수\ncount\n\n\n\n\n8\n서울특별시\n1847676\n50146\n\n\n7\n부산광역시\n762654\n29094\n\n\n1\n경기도\n1912653\n18977\n\n\n2\n경상남도\n658095\n18156\n\n\n3\n경상북도\n657871\n16582\n\n\n5\n대구광역시\n462409\n14290\n\n\n11\n인천광역시\n461292\n10555\n\n\n15\n충청남도\n458092\n7657\n\n\n12\n전라남도\n508892\n7248\n\n\n16\n충청북도\n326888\n7156\n\n\n0\n강원도\n360910\n6811\n\n\n13\n전라북도\n445741\n5139\n\n\n14\n제주도\n117752\n4181\n\n\n10\n울산광역시\n164509\n3722\n\n\n6\n대전광역시\n243621\n3413\n\n\n4\n광주광역시\n236357\n3411\n\n\n9\n세종특별시\n31351\n545\n\n\n\n\n\n\n\n\n# 점포 수 / 노인인구 수\nratio_old = ratio_old.assign(ratio = ratio_old['count'] / ratio_old['노인인구수'] * 100)\nratio_old = ratio_old.sort_values('ratio',ascending = False)\nratio_old\n\n\n\n\n\n\n\n\nregion\n노인인구수\ncount\nratio\n\n\n\n\n7\n부산광역시\n762654\n29094\n3.814836\n\n\n14\n제주도\n117752\n4181\n3.550683\n\n\n5\n대구광역시\n462409\n14290\n3.090338\n\n\n2\n경상남도\n658095\n18156\n2.758872\n\n\n8\n서울특별시\n1847676\n50146\n2.714004\n\n\n3\n경상북도\n657871\n16582\n2.520555\n\n\n11\n인천광역시\n461292\n10555\n2.288139\n\n\n10\n울산광역시\n164509\n3722\n2.262490\n\n\n16\n충청북도\n326888\n7156\n2.189129\n\n\n0\n강원도\n360910\n6811\n1.887174\n\n\n9\n세종특별시\n31351\n545\n1.738382\n\n\n15\n충청남도\n458092\n7657\n1.671498\n\n\n4\n광주광역시\n236357\n3411\n1.443156\n\n\n12\n전라남도\n508892\n7248\n1.424271\n\n\n6\n대전광역시\n243621\n3413\n1.400947\n\n\n13\n전라북도\n445741\n5139\n1.152912\n\n\n1\n경기도\n1912653\n18977\n0.992182\n\n\n\n\n\n\n\n\nplt.clf()\nsns.barplot(data = ratio_old, x = 'ratio', y = 'region', hue = 'region')\nplt.show()"
  }
]